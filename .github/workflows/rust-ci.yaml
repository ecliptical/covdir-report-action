on:
  pull_request:
  push:
    branches:
      - main

name: Rust CI

jobs:
  lint:
    name: Check formatting and run clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
      - name: Cache tools
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy, llvm-tools
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all -- -D warnings

  coverage:
    name: Run tests with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
      - name: Cache tools
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy, llvm-tools
      - name: Build the binary
        run: cargo build
        env:
          RUSTFLAGS: '-Cinstrument-coverage'
      - name: Run unit tests
        run: cargo test
        env:
          RUSTFLAGS: '-Cinstrument-coverage'
          LLVM_PROFILE_FILE: 'target/coverage/%p-%m.profraw'
      - uses: cargo-bins/cargo-binstall@v1.15.5
      - name: Install grcov
        run: cargo binstall --no-confirm grcov@0.10.0
      - name: Run grcov
        run: grcov ./target/coverage -s . --binary-path ./target/debug/ --excl-start '^mod\s+tests\s*\{$' -t covdir --branch --ignore-not-existing --keep-only 'src/**' -o ./target/covdir.json
      - name: Generate coverage report
        uses: ecliptical/covdir-report-action@v0.2
        with:
          file: ./target/covdir.json
          summary: 'true'
          out: ./target/coverage.md
      - name: Add coverage comment to the pull request
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' 
        with:
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          path: ./target/coverage.md
